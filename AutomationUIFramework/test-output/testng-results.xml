<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="7" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-12T15:39:21 IST" name="Suite" finished-at="2025-04-12T15:39:39 IST" duration-ms="17600">
    <groups>
      <group name="Positive">
        <method signature="StandaloneTest.positiveE2EOrderCreation(java.util.HashMap)[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" name="positiveE2EOrderCreation" class="PracticeProblemsSelenium.StandaloneTest"/>
      </group> <!-- Positive -->
    </groups>
    <test started-at="2025-04-12T15:39:21 IST" name="NegativeScenarios" finished-at="2025-04-12T15:39:35 IST" duration-ms="13333">
      <class name="PracticeProblemsSelenium.NegativeScenarios">
        <test-method is-config="true" signature="intializedriver()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:21 IST" name="intializedriver" finished-at="2025-04-12T15:39:25 IST" duration-ms="3850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializedriver -->
        <test-method retried="true" signature="validateErrorMessageIncorrectUsernamePassword()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:25 IST" name="validateErrorMessageIncorrectUsernamePassword" finished-at="2025-04-12T15:39:27 IST" duration-ms="1322" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrecto email or password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrecto email or password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at PracticeProblemsSelenium.NegativeScenarios.validateErrorMessageIncorrectUsernamePassword(NegativeScenarios.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorMessageIncorrectUsernamePassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:27 IST" name="teardown" finished-at="2025-04-12T15:39:27 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="intializedriver()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:27 IST" name="intializedriver" finished-at="2025-04-12T15:39:29 IST" duration-ms="2342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializedriver -->
        <test-method retried="true" signature="validateErrorMessageIncorrectUsernamePassword()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:29 IST" name="validateErrorMessageIncorrectUsernamePassword" finished-at="2025-04-12T15:39:30 IST" duration-ms="1070" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrecto email or password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrecto email or password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at PracticeProblemsSelenium.NegativeScenarios.validateErrorMessageIncorrectUsernamePassword(NegativeScenarios.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorMessageIncorrectUsernamePassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:30 IST" name="teardown" finished-at="2025-04-12T15:39:30 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="intializedriver()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:30 IST" name="intializedriver" finished-at="2025-04-12T15:39:33 IST" duration-ms="2330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializedriver -->
        <test-method signature="validateErrorMessageIncorrectUsernamePassword()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:33 IST" name="validateErrorMessageIncorrectUsernamePassword" finished-at="2025-04-12T15:39:34 IST" duration-ms="1100" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrecto email or password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrecto email or password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at PracticeProblemsSelenium.NegativeScenarios.validateErrorMessageIncorrectUsernamePassword(NegativeScenarios.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorMessageIncorrectUsernamePassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:PracticeProblemsSelenium.NegativeScenarios@74f6c5d8]" started-at="2025-04-12T15:39:34 IST" name="teardown" finished-at="2025-04-12T15:39:35 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- PracticeProblemsSelenium.NegativeScenarios -->
    </test> <!-- NegativeScenarios -->
    <test started-at="2025-04-12T15:39:21 IST" name="PositiveScenarios" finished-at="2025-04-12T15:39:39 IST" duration-ms="17600">
      <class name="PracticeProblemsSelenium.StandaloneTest">
        <test-method is-config="true" signature="intializedriver()[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:22 IST" name="intializedriver" finished-at="2025-04-12T15:39:26 IST" duration-ms="3943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializedriver -->
        <test-method signature="positiveE2EOrderCreation(java.util.HashMap)[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:26 IST" name="positiveE2EOrderCreation" data-provider="getData" finished-at="2025-04-12T15:39:31 IST" duration-ms="5583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@1234, product=ADIDAS ORIGINAL, username=pritam.debnath@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveE2EOrderCreation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:31 IST" name="teardown" finished-at="2025-04-12T15:39:31 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="intializedriver()[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:31 IST" name="intializedriver" finished-at="2025-04-12T15:39:34 IST" duration-ms="2327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializedriver -->
        <test-method signature="positiveE2EOrderCreation(java.util.HashMap)[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:34 IST" name="positiveE2EOrderCreation" data-provider="getData" finished-at="2025-04-12T15:39:39 IST" duration-ms="4866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@12345, product=ZARA COAT 3, username=pritamkol1995@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveE2EOrderCreation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:PracticeProblemsSelenium.StandaloneTest@10289886]" started-at="2025-04-12T15:39:39 IST" name="teardown" finished-at="2025-04-12T15:39:39 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- PracticeProblemsSelenium.StandaloneTest -->
    </test> <!-- PositiveScenarios -->
  </suite> <!-- Suite -->
</testng-results>
